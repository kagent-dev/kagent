name: CI Build

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    env:
      VERSION: v0.0.1-test
    strategy:
      matrix:
        image:
          - controller
          - ui
          - app
          - cli
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Run make build
      env:
        DOCKER_BUILD_ARGS: "--platform linux/amd64,linux/arm64 --output type=tar,dest=${{ runner.temp }}/${{ matrix.image }}.tar"
        DOCKER_BUILDER: "docker buildx"
      run: make build-${{ matrix.image }}
      working-directory: ./
    # - name: Upload artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: ${{matrix.image}}.tar
    #     path: ${{ runner.temp }}

  e2e-test:
    env:
      VERSION: v0.0.1-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0
      with:
        version: v3.17.0

    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1
      with:
        cluster_name: kagent

    - name: Install Kagent
      env:
        OPENAI_API_KEY: fake-key
      run: |
        make helm-install
        kubectl wait --for=condition=Accepted  agents.kagent.dev -n kagent --all --timeout=60s

  python-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install python
        run: uv python install 3.12
        working-directory: ./python

      - name: Sync dependencies
        working-directory: ./python
        run: |
          export GIT_LFS_SKIP_SMUDGE=1
          uv sync --all-extras

      - name: Run tests
        working-directory: ./python
        run: uv run pytest tests

  ui-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json

      - name: Install dependencies
        working-directory: ./ui
        run: npm ci

      - name: Run tests
        working-directory: ./ui
        run: npm run test
