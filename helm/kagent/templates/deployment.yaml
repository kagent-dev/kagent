apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kagent.fullname" . }}
  namespace: {{ include "kagent.namespace" . }}
  labels:
    {{- include "kagent.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kagent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kagent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "kagent.fullname" . }}
      volumes:
        - name: nginx-config
          configMap:
            name: {{ include "kagent.fullname" . }}-nginx-config
      containers:
        - name: controller
          args:
          {{/* #we need to pass the default model config name to the app otherwise helm upgrade will not allow provider type change due to validations */}}
            - -default-model-config-name
            - {{ include "kagent.defaultModelConfigName" . | quote }}
            - -zap-log-level
            - {{ .Values.controller.loglevel }}
            - -watch-namespaces
            - "{{ include "kagent.watchNamespaces" . }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.controller.image.registry }}/{{ .Values.controller.image.repository }}:{{ coalesce .Values.global.tag .Values.controller.image.tag .Chart.Version }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
          env:
            - name: KAGENT_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          {{- with .Values.controller.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.ports.controller.targetPort }}
              protocol: TCP
        - name: app
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.app.image.registry }}/{{ .Values.app.image.repository }}:{{ coalesce .Values.global.tag .Values.app.image.tag .Chart.Version }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          env:
            - name: OTEL_TRACING_ENABLED
              value: {{ .Values.otel.tracing.enabled | quote }}
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: {{ .Values.otel.tracing.exporter.otlp.endpoint | quote }}
            - name: OTEL_EXPORTER_OTLP_TRACES_TIMEOUT
              value: {{ .Values.otel.tracing.exporter.otlp.timeout | quote }}
            - name: OTEL_EXPORTER_OTLP_TRACES_INSECURE
              value: {{ .Values.otel.tracing.exporter.otlp.insecure | quote }}
            - name: AUTOGEN_DISABLE_RUNTIME_TRACING
              value: "true"
          {{- with .Values.app.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.ports.app.targetPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /api/version
              port: {{ .Values.service.ports.app.targetPort }}
            initialDelaySeconds: 15
            periodSeconds: 15
        - name: ui
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.ui.image.registry }}/{{ .Values.ui.image.repository }}:{{ coalesce .Values.global.tag .Values.ui.image.tag .Chart.Version }}"
          imagePullPolicy: {{ .Values.ui.image.pullPolicy }}
          env:
            - name: NEXT_PUBLIC_BACKEND_URL
              value: "http://{{ include "kagent.fullname" . }}.{{ include "kagent.namespace" . }}.svc.cluster.local/api"
          {{- with .Values.ui.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.ports.ui.targetPort }}
              protocol: TCP
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          resources:
            {{- toYaml .Values.ui.resources | nindent 12 }}
        {{- if .Values.oauth2Proxy.enabled }}
        - name: oauth2-proxy
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.oauth2Proxy.image.registry }}/{{ .Values.oauth2Proxy.image.repository }}:{{ .Values.oauth2Proxy.image.tag }}"
          imagePullPolicy: {{ .Values.oauth2Proxy.image.pullPolicy }}
          args:
            - --http-address=0.0.0.0:4180
            - --metrics-address=0.0.0.0:44180
            {{- range .Values.oauth2Proxy.config.upstreams }}
            - --upstream={{ . }}
            {{- end }}
            - --provider={{ .Values.oauth2Proxy.provider }}
            {{- if .Values.oauth2Proxy.oidc.issuerUrl }}
            - --oidc-issuer-url={{ .Values.oauth2Proxy.oidc.issuerUrl }}
            {{- end }}
            {{- if .Values.oauth2Proxy.github.org }}
            - --github-org={{ .Values.oauth2Proxy.github.org }}
            {{- end }}
            {{- if .Values.oauth2Proxy.github.team }}
            - --github-team={{ .Values.oauth2Proxy.github.team }}
            {{- end }}
            {{- if .Values.oauth2Proxy.google.hostedDomain }}
            - --google-hosted-domain={{ .Values.oauth2Proxy.google.hostedDomain }}
            {{- end }}
            {{- if .Values.oauth2Proxy.azure.tenant }}
            - --azure-tenant={{ .Values.oauth2Proxy.azure.tenant }}
            {{- end }}
            {{- if .Values.oauth2Proxy.config.emailDomains }}
            {{- range .Values.oauth2Proxy.config.emailDomains }}
            - --email-domain={{ . }}
            {{- end }}
            {{- else }}
            - --email-domain=*
            {{- end }}
            {{- if .Values.oauth2Proxy.config.cookieDomain }}
            - --cookie-domain={{ .Values.oauth2Proxy.config.cookieDomain }}
            {{- end }}
            - --cookie-secure={{ .Values.oauth2Proxy.config.cookieSecure }}
            - --cookie-httponly={{ .Values.oauth2Proxy.config.cookieHttpOnly }}
            - --cookie-samesite={{ .Values.oauth2Proxy.config.cookieSameSite }}
            - --cookie-expire={{ .Values.oauth2Proxy.config.cookieExpire }}
            - --session-store-type={{ .Values.oauth2Proxy.config.sessionStoreType }}
            - --log-level={{ .Values.oauth2Proxy.config.logLevel }}
            {{- range .Values.oauth2Proxy.config.skipAuthPaths }}
            - --skip-auth-regex=^{{ . }}
            {{- end }}
            {{- range .Values.oauth2Proxy.config.extraArgs }}
            - {{ . }}
            {{- end }}
          env:
            {{- if not .Values.oauth2Proxy.secrets.external }}
            - name: OAUTH2_PROXY_CLIENT_ID
              value: {{ .Values.oauth2Proxy.clientId | quote }}
            - name: OAUTH2_PROXY_CLIENT_SECRET
              value: {{ .Values.oauth2Proxy.clientSecret | quote }}
            - name: OAUTH2_PROXY_COOKIE_SECRET
              value: {{ .Values.oauth2Proxy.cookieSecret | quote }}
            {{- else }}
            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.oauth2Proxy.secrets.secretName }}
                  key: {{ .Values.oauth2Proxy.secrets.clientIdKey }}
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.oauth2Proxy.secrets.secretName }}
                  key: {{ .Values.oauth2Proxy.secrets.clientSecretKey }}
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.oauth2Proxy.secrets.secretName }}
                  key: {{ .Values.oauth2Proxy.secrets.cookieSecretKey }}
            {{- end }}
            {{- with .Values.oauth2Proxy.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 4180
              protocol: TCP
            - name: metrics
              containerPort: 44180
              protocol: TCP
          resources:
            {{- toYaml .Values.oauth2Proxy.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /ping
              port: 4180
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 4180
            initialDelaySeconds: 5
            periodSeconds: 5
        {{- end }}
