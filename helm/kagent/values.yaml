# Default values for kagent

# ==============================================================================
# GLOBAL CONFIGURATION
# ==============================================================================

tag: ""
registry: "cr.kagent.dev"


imagePullSecrets: []
imagePullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

# -- Override the namespace
# @default -- `.Release.Namespace`
namespaceOverride: ""

podAnnotations: {}

# -- Additional labels to add to all Kubernetes resources
labels: {}
  # environment: production
  # team: platform

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# ==============================================================================
# CORE KAGENT COMPONENTS
# ==============================================================================

# -- Node taints which will be tolerated for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
tolerations: []

# -- Node labels to match for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
nodeSelector: {}

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================

database:
  type: sqlite
  sqlite:
    databaseName: kagent.db
  postgres:
    url: postgres://postgres:kagent@pgsql-postgresql.kagent.svc.cluster.local:5432/postgres

# ==============================================================================
# CONTROLLER CONFIGURATION
# ==============================================================================

controller:
  replicas: 1
  loglevel: "info"
  agentImage:
    registry: ""
    repository: kagent-dev/kagent/app
    tag: "" # Will default to global, then Chart version
    pullPolicy: ""
  streaming: # Streaming buffer size for A2A communication
    maxBufSize: 1Mi # 1024 * 1024
    initialBufSize: 4Ki # 4 * 1024
    timeout: 600s # 600 seconds
  # -- Namespaces the controller should watch.
  # If empty, the controller will watch ALL available namespaces.
  # @default -- [] (watches all available namespaces)
  watchNamespaces: []
  #  - watch-ns-1
  #  - watch-ns-2

  # -- Node taints which will be tolerated for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
  tolerations: []

  # -- Node labels to match for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
  nodeSelector: {}

  image:
    registry: ""
    repository: kagent-dev/kagent/controller
    tag: "" # Will default to global, then Chart version
    pullPolicy: ""
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 2
      memory: 512Mi
  service:
    type: ClusterIP
    ports:
      port: 8083
      targetPort: 8083
  env: []

# ==============================================================================
# UI CONFIGURATION
# ==============================================================================

ui:
  replicas: 1
  image:
    registry: ""
    repository: kagent-dev/kagent/ui
    tag: ""
    pullPolicy: ""
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  service:
    type: ClusterIP
    ports:
      port: 8080
      targetPort: 8080
  env: {} # Additional configuration key-value pairs for the ui ConfigMap

  # -- Node taints which will be tolerated for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
  tolerations: []

  # -- Node labels to match for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
  nodeSelector: {}

# ==============================================================================
# SLACKBOT CONFIGURATION
# ==============================================================================
# Slack bot integration for interacting with kagent agents via Slack
# Requires Slack app with Socket Mode enabled
# See slackbot/SLACK_SETUP.md for detailed setup instructions

slackbot:
  # -- Enable or disable the Slackbot deployment
  enabled: false

  # -- Number of Slackbot replicas
  replicas: 2

  image:
    registry: ""
    repository: kagent-dev/kagent/slackbot
    tag: ""
    pullPolicy: ""

  # -- Slack API credentials (required for Slackbot to function)
  # IMPORTANT: Set these via Helm values or external secrets management
  # DO NOT commit actual tokens to version control
  secrets:
    # Slack Bot User OAuth Token (starts with xoxb-)
    # Obtain from: Slack App > OAuth & Permissions > Bot User OAuth Token
    slackBotToken: ""

    # Slack App-Level Token for Socket Mode (starts with xapp-)
    # Obtain from: Slack App > Basic Information > App-Level Tokens
    slackAppToken: ""

    # Slack Signing Secret for request verification
    # Obtain from: Slack App > Basic Information > App Credentials
    slackSigningSecret: ""

  # -- Slackbot configuration
  config:
    # Kagent timeout for agent requests (seconds)
    kagentTimeout: "30"

    # Health server configuration
    serverHost: "0.0.0.0"
    serverPort: 8080

    # Logging level (DEBUG, INFO, WARNING, ERROR)
    logLevel: "INFO"

  # -- Agent access permissions for RBAC
  # Configure which Slack users/groups can access which agents
  permissions:
    agent_permissions: {}
    # Example configuration:
    # agent_permissions:
    #   kagent/k8s-agent:
    #     user_groups:
    #       - S0T8FCWSB  # Slack user group ID
    #     users:
    #       - admin@company.com
    #     deny_message: "K8s agent requires @sre-team membership"
    settings:
      user_group_cache_ttl: 300  # 5 minutes

  # -- Resource limits and requests
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

  # -- Service configuration
  service:
    type: ClusterIP
    ports:
      port: 8080
      targetPort: 8080
    annotations: {}
    # Example: Expose metrics for Prometheus scraping
    # annotations:
    #   prometheus.io/scrape: "true"
    #   prometheus.io/port: "8080"
    #   prometheus.io/path: "/metrics"

  # -- Additional environment variables
  env: []
  # Example:
  # env:
  #   - name: CUSTOM_VAR
  #     value: "custom-value"

  # -- Pod annotations
  podAnnotations: {}

  # -- Node taints which will be tolerated for Pod scheduling
  tolerations: []

  # -- Node labels to match for Pod scheduling
  nodeSelector: {}

  # -- Horizontal Pod Autoscaler configuration
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
    # behavior:
    #   scaleDown:
    #     stabilizationWindowSeconds: 300
    #     policies:
    #       - type: Percent
    #         value: 50
    #         periodSeconds: 60

  # -- Pod Disruption Budget configuration
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
    # maxUnavailable: 1  # Use either minAvailable or maxUnavailable, not both

  # -- RBAC configuration
  rbac:
    create: false
    # Slackbot doesn't need K8s API access by default
    # Enable this only if you add features that need to query K8s resources
    rules: []
    # Example rules if needed:
    # rules:
    #   - apiGroups: [""]
    #     resources: ["pods"]
    #     verbs: ["get", "list"]

# ==============================================================================
# LLM PROVIDERS CONFIGURATION
# ==============================================================================
# https://kagent.dev/docs/getting-started/configuring-providers

providers:
  default: openAI
  openAI:
    provider: OpenAI
    model: "gpt-4.1-mini"
    apiKeySecretRef: kagent-openai
    apiKeySecretKey: OPENAI_API_KEY
    # apiKey: ""
  ollama:
    provider: Ollama
    model: "llama3.2"
    config:
      host: host.docker.internal:11434
  anthropic:
    provider: Anthropic
    model: "claude-3-5-haiku-20241022"
    apiKeySecretRef: kagent-anthropic
    apiKeySecretKey: ANTHROPIC_API_KEY
    # apiKey: ""
  azureOpenAI:
    provider: AzureOpenAI
    model: "gpt-4.1-mini"
    apiKeySecretRef: kagent-azure-openai
    apiKeySecretKey: AZUREOPENAI_API_KEY
    # apiKey: ""
    config:
      apiVersion: "2023-05-15"
      azureAdToken: ""
      azureDeployment: ""
      azureEndpoint: ""
  gemini:
    provider: Gemini
    model: "gemini-2.0-flash-lite"
    apiKeySecretRef: kagent-gemini
    apiKeySecretKey: GOOGLE_API_KEY
    # apiKey: ""

# ==============================================================================
# KMCP
# ==============================================================================

kmcp:
  enabled: true
  nameOverride: "kmcp"
  fullnameOverride: "" # Override if desired
  namespaceOverride: "" # Override if desired (in conjunction with fullnameOverride to drop the `kagent-` prefix if you want)
  image:
    tag: "0.1.9" # Required until https://github.com/kagent-dev/kmcp/issues/74 is resolved
  # See https://github.com/kagent-dev/kmcp/blob/main/helm/kmcp/values.yaml for chart values

# ==============================================================================
# BUILT-IN TOOLS
# ==============================================================================

kagent-tools:
  fullnameOverride: kagent-tools
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  tools:
    loglevel: "debug"

# ==============================================================================
# AGENTS
# ==============================================================================

agents:
  k8s-agent:
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  kgateway-agent:
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  istio-agent:
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  promql-agent:
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  observability-agent:
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  argo-rollouts-agent:
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  helm-agent:
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  cilium-policy-agent:
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  cilium-manager-agent:
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  cilium-debug-agent:
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi

# ==============================================================================
# MCP TOOLS
# ==============================================================================

tools:
  grafana-mcp:
    enabled: true
  querydoc:
    enabled: true

grafana-mcp:
  grafana:
    url: "grafana.kagent:3000/api"
    apiKey: "-"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi

querydoc:
  replicas: 1
  image:
    registry: ghcr.io
    repository: kagent-dev/doc2vec/mcp
    tag: 1.1.13
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  openai:
    apiKey: ""

# ==============================================================================
# OBSERVABILITY
# ==============================================================================

otel:
  tracing:
    enabled: false
    exporter:
      otlp:
        endpoint: http://host.docker.internal:4317
        timeout: 15
        insecure: true
  logging:
    enabled: false
    exporter:
      otlp:
        endpoint: http://host.docker.internal:4317
        timeout: 15
        insecure: true
