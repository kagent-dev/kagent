definitions:
  controller_internal_httpserver_handlers.CreateModelConfigRequest:
    properties:
      anthropic:
        $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.AnthropicConfig'
      apiKey:
        type: string
      azureOpenAI:
        $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.AzureOpenAIConfig'
      model:
        type: string
      ollama:
        $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.OllamaConfig'
      openAI:
        $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.OpenAIConfig'
      provider:
        $ref: '#/definitions/controller_internal_httpserver_handlers.Provider'
      ref:
        type: string
    type: object
  controller_internal_httpserver_handlers.ModelConfigResponse:
    properties:
      apiKeySecretKey:
        type: string
      apiKeySecretRef:
        type: string
      model:
        type: string
      modelParams:
        additionalProperties: true
        type: object
      providerName:
        type: string
      ref:
        type: string
    type: object
  controller_internal_httpserver_handlers.Provider:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  controller_internal_httpserver_handlers.UpdateModelConfigRequest:
    properties:
      anthropic:
        $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.AnthropicConfig'
      apiKey:
        type: string
      azureOpenAI:
        $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.AzureOpenAIConfig'
      model:
        type: string
      ollama:
        $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.OllamaConfig'
      openAI:
        $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.OpenAIConfig'
      provider:
        $ref: '#/definitions/controller_internal_httpserver_handlers.Provider'
    type: object
  github_com_kagent-dev_kagent_go_controller_api_v1alpha1.AnthropicConfig:
    properties:
      baseUrl:
        description: |-
          Base URL for the Anthropic API (overrides default)
          +optional
        type: string
      maxTokens:
        description: |-
          Maximum tokens to generate
          +optional
        type: integer
      temperature:
        description: |-
          Temperature for sampling
          +optional
        type: string
      topK:
        description: |-
          Top-k sampling parameter
          +optional
        type: integer
      topP:
        description: |-
          Top-p sampling parameter
          +optional
        type: string
    type: object
  github_com_kagent-dev_kagent_go_controller_api_v1alpha1.AnthropicVertexAIConfig:
    properties:
      location:
        description: |-
          The project location
          +required
        type: string
      maxTokens:
        description: |-
          Maximum tokens to generate
          +optional
        type: integer
      projectID:
        description: |-
          The project ID
          +required
        type: string
      stopSequences:
        description: |-
          Stop sequences
          +optional
        items:
          type: string
        type: array
      temperature:
        description: |-
          Temperature
          +optional
        type: string
      topK:
        description: |-
          Top-k sampling parameter
          +optional
        type: string
      topP:
        description: |-
          Top-p sampling parameter
          +optional
        type: string
    type: object
  github_com_kagent-dev_kagent_go_controller_api_v1alpha1.AzureOpenAIConfig:
    properties:
      apiVersion:
        description: |-
          API version for the Azure OpenAI API
          +required
        type: string
      azureAdToken:
        description: |-
          Azure AD token for authentication
          +optional
        type: string
      azureDeployment:
        description: |-
          Deployment name for the Azure OpenAI API
          +optional
        type: string
      azureEndpoint:
        description: |-
          Endpoint for the Azure OpenAI API
          +required
        type: string
      maxTokens:
        description: |-
          Maximum tokens to generate
          +optional
        type: integer
      temperature:
        description: |-
          Temperature for sampling
          +optional
        type: string
      topP:
        description: |-
          Top-p sampling parameter
          +optional
        type: string
    type: object
  github_com_kagent-dev_kagent_go_controller_api_v1alpha1.GeminiVertexAIConfig:
    properties:
      candidateCount:
        description: |-
          Candidate count
          +optional
        type: integer
      location:
        description: |-
          The project location
          +required
        type: string
      maxOutputTokens:
        description: |-
          Maximum output tokens
          +optional
        type: integer
      projectID:
        description: |-
          The project ID
          +required
        type: string
      responseMimeType:
        description: |-
          Response mime type
          +optional
        type: string
      stopSequences:
        description: |-
          Stop sequences
          +optional
        items:
          type: string
        type: array
      temperature:
        description: |-
          Temperature
          +optional
        type: string
      topK:
        description: |-
          Top-k sampling parameter
          +optional
        type: string
      topP:
        description: |-
          Top-p sampling parameter
          +optional
        type: string
    type: object
  github_com_kagent-dev_kagent_go_controller_api_v1alpha1.ModelConfig:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.ModelConfigSpec'
      status:
        $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.ModelConfigStatus'
    type: object
  github_com_kagent-dev_kagent_go_controller_api_v1alpha1.ModelConfigSpec:
    properties:
      anthropic:
        allOf:
        - $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.AnthropicConfig'
        description: |-
          Anthropic-specific configuration
          +optional
      anthropicVertexAI:
        allOf:
        - $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.AnthropicVertexAIConfig'
        description: |-
          Anthropic-specific configuration
          +optional
      apiKeySecretKey:
        description: |-
          The key in the secret that contains the API key
          +optional
        type: string
      apiKeySecretRef:
        description: |-
          The reference to the secret that contains the API key. Can either be a reference to the name of a secret in the same namespace as the referencing ModelConfig, or a reference to the name of a Secret in a different namespace in the form <namespace>/<name>
          +optional
        type: string
      azureOpenAI:
        allOf:
        - $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.AzureOpenAIConfig'
        description: |-
          Azure OpenAI-specific configuration
          +optional
      defaultHeaders:
        additionalProperties:
          type: string
        description: +optional
        type: object
      geminiVertexAI:
        allOf:
        - $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.GeminiVertexAIConfig'
        description: |-
          Gemini-specific configuration
          +optional
      model:
        type: string
      modelInfo:
        allOf:
        - $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.ModelInfo'
        description: |-
          ModelInfo contains information about the model.
          This field is required if the model is not one of the
          pre-defined autogen models. That list can be found here:
          +optional
      ollama:
        allOf:
        - $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.OllamaConfig'
        description: |-
          Ollama-specific configuration
          +optional
      openAI:
        allOf:
        - $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.OpenAIConfig'
        description: |-
          OpenAI-specific configuration
          +optional
      provider:
        allOf:
        - $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.ModelProvider'
        description: |-
          The provider of the model
          +kubebuilder:default=OpenAI
    type: object
  github_com_kagent-dev_kagent_go_controller_api_v1alpha1.ModelConfigStatus:
    properties:
      conditions:
        items:
          $ref: '#/definitions/v1.Condition'
        type: array
      observedGeneration:
        type: integer
    type: object
  github_com_kagent-dev_kagent_go_controller_api_v1alpha1.ModelInfo:
    properties:
      family:
        description: +optional
        type: string
      functionCalling:
        description: +optional
        type: boolean
      jsonOutput:
        description: +optional
        type: boolean
      multipleSystemMessages:
        description: +optional
        type: boolean
      structuredOutput:
        description: +optional
        type: boolean
      vision:
        description: +optional
        type: boolean
    type: object
  github_com_kagent-dev_kagent_go_controller_api_v1alpha1.ModelProvider:
    enum:
    - Anthropic
    - AzureOpenAI
    - OpenAI
    - Ollama
    - GeminiVertexAI
    - AnthropicVertexAI
    type: string
    x-enum-varnames:
    - Anthropic
    - AzureOpenAI
    - OpenAI
    - Ollama
    - GeminiVertexAI
    - AnthropicVertexAI
  github_com_kagent-dev_kagent_go_controller_api_v1alpha1.OllamaConfig:
    properties:
      host:
        description: |-
          Host for the Ollama API
          +optional
        type: string
      options:
        additionalProperties:
          type: string
        description: |-
          Options for the Ollama API
          +optional
        type: object
    type: object
  github_com_kagent-dev_kagent_go_controller_api_v1alpha1.OpenAIConfig:
    properties:
      baseUrl:
        description: |-
          Base URL for the OpenAI API (overrides default)
          +optional
        type: string
      frequencyPenalty:
        description: |-
          Frequency penalty
          +optional
        type: string
      maxTokens:
        description: |-
          Maximum tokens to generate
          +optional
        type: integer
      "n":
        description: N value
        type: integer
      organization:
        description: |-
          Organization ID for the OpenAI API
          +optional
        type: string
      presencePenalty:
        description: |-
          Presence penalty
          +optional
        type: string
      seed:
        description: |-
          Seed value
          +optional
        type: integer
      temperature:
        description: |-
          Temperature for sampling
          +optional
        type: string
      timeout:
        description: Timeout
        type: integer
      topP:
        description: |-
          Top-p sampling parameter
          +optional
        type: string
    type: object
  github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse:
    properties:
      code:
        example: 404
        type: integer
      error:
        example: Resource not found
        type: string
      message:
        example: The requested ModelConfig was not found
        type: string
    type: object
  k8s_io_apimachinery_pkg_apis_meta_v1.ConditionStatus:
    enum:
    - "True"
    - "False"
    - Unknown
    type: string
    x-enum-varnames:
    - ConditionTrue
    - ConditionFalse
    - ConditionUnknown
  v1.Condition:
    properties:
      lastTransitionTime:
        description: |-
          lastTransitionTime is the last time the condition transitioned from one status to another.
          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:Type=string
          +kubebuilder:validation:Format=date-time
        type: string
      message:
        description: |-
          message is a human readable message indicating details about the transition.
          This may be an empty string.
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:MaxLength=32768
        type: string
      observedGeneration:
        description: |-
          observedGeneration represents the .metadata.generation that the condition was set based upon.
          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
          with respect to the current state of the instance.
          +optional
          +kubebuilder:validation:Minimum=0
        type: integer
      reason:
        description: |-
          reason contains a programmatic identifier indicating the reason for the condition's last transition.
          Producers of specific condition types may define expected values and meanings for this field,
          and whether the values are considered a guaranteed API.
          The value should be a CamelCase string.
          This field may not be empty.
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:MaxLength=1024
          +kubebuilder:validation:MinLength=1
          +kubebuilder:validation:Pattern=`^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$`
        type: string
      status:
        allOf:
        - $ref: '#/definitions/k8s_io_apimachinery_pkg_apis_meta_v1.ConditionStatus'
        description: |-
          status of the condition, one of True, False, Unknown.
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:Enum=True;False;Unknown
      type:
        description: |-
          type of condition in CamelCase or in foo.example.com/CamelCase.
          ---
          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
          useful (see .node.status.conditions), the ability to deconflict is important.
          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
          +kubebuilder:validation:MaxLength=316
        type: string
    type: object
  v1.FieldsV1:
    type: object
  v1.ManagedFieldsEntry:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the version of this resource that this field set
          applies to. The format is "group/version" just like the top-level
          APIVersion field. It is necessary to track the version of a field
          set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: |-
          FieldsType is the discriminator for the different fields format and version.
          There is currently only one possible value: "FieldsV1"
        type: string
      fieldsV1:
        allOf:
        - $ref: '#/definitions/v1.FieldsV1'
        description: |-
          FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
          +optional
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        allOf:
        - $ref: '#/definitions/v1.ManagedFieldsOperationType'
        description: |-
          Operation is the type of operation which lead to this ManagedFieldsEntry being created.
          The only valid values for this field are 'Apply' and 'Update'.
      subresource:
        description: |-
          Subresource is the name of the subresource used to update that object, or
          empty string if the object was updated through the main resource. The
          value of this field is used to distinguish between managers, even if they
          share the same name. For example, a status update will be distinct from a
          regular update using the same manager name.
          Note that the APIVersion field is not related to the Subresource field and
          it always corresponds to the version of the main resource.
        type: string
      time:
        description: |-
          Time is the timestamp of when the ManagedFields entry was added. The
          timestamp will also be updated if a field is added, the manager
          changes any of the owned fields value or removes a field. The
          timestamp does not update when a field is removed from the entry
          because another manager took it over.
          +optional
        type: string
    type: object
  v1.ManagedFieldsOperationType:
    enum:
    - Apply
    - Update
    type: string
    x-enum-varnames:
    - ManagedFieldsOperationApply
    - ManagedFieldsOperationUpdate
  v1.ObjectMeta:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
          +optional
        type: object
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          Finalizers may be processed and removed in any order.  Order is NOT enforced
          because it introduces significant risk of stuck finalizers.
          finalizers is a shared field, any actor with permission can reorder it.
          If the finalizer list is processed in order, then this can lead to a situation
          in which the component responsible for the first finalizer in the list is
          waiting for a signal (field value, external system, or other) produced by a
          component responsible for a finalizer later in the list, resulting in a deadlock.
          Without enforced ordering finalizers are free to order amongst themselves and
          are not vulnerable to ordering changes in the list.
          +optional
          +patchStrategy=merge
          +listType=set
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will return a 409.

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
          +optional
        type: object
      managedFields:
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          +optional
          +listType=atomic
        items:
          $ref: '#/definitions/v1.ManagedFieldsEntry'
        type: array
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
          +listType=map
          +listMapKey=uid
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
          +optional
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
          +optional
        type: string
    type: object
  v1.OwnerReference:
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
          for how the garbage collector interacts with this field and enforces the foreground deletion.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
        type: string
    type: object
info:
  contact: {}
  description: This API powers the backend for the CLI, UI, and other services.
  title: KAgent Controller API
  version: "1.0"
paths:
  /api/modelconfigs:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all ModelConfig resources across all namespaces
      produces:
      - application/json
      responses:
        "200":
          description: List of ModelConfigs
          schema:
            items:
              $ref: '#/definitions/controller_internal_httpserver_handlers.ModelConfigResponse'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse'
      summary: List all ModelConfigs
      tags:
      - ModelConfigs
    post:
      consumes:
      - application/json
      description: Creates a new ModelConfig resource with the specified configuration
      parameters:
      - description: ModelConfig creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller_internal_httpserver_handlers.CreateModelConfigRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created ModelConfig
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_api_v1alpha1.ModelConfig'
        "400":
          description: Bad request - invalid input
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse'
        "409":
          description: Conflict - ModelConfig already exists
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse'
      summary: Create a new ModelConfig
      tags:
      - ModelConfigs
  /api/modelconfigs/{namespace}/{configName}:
    delete:
      consumes:
      - application/json
      description: Deletes a specific ModelConfig resource
      parameters:
      - description: Namespace of the ModelConfig
        in: path
        name: namespace
        required: true
        type: string
      - description: Name of the ModelConfig
        in: path
        name: configName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ModelConfig deleted successfully
          schema: {}
        "400":
          description: Bad request - invalid parameters
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse'
        "404":
          description: ModelConfig not found
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse'
      summary: Delete a ModelConfig
      tags:
      - ModelConfigs
    get:
      consumes:
      - application/json
      description: Retrieves a specific ModelConfig by namespace and name
      parameters:
      - description: Namespace of the ModelConfig
        in: path
        name: namespace
        required: true
        type: string
      - description: Name of the ModelConfig
        in: path
        name: configName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ModelConfig details
          schema:
            $ref: '#/definitions/controller_internal_httpserver_handlers.ModelConfigResponse'
        "400":
          description: Bad request - invalid parameters
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse'
        "404":
          description: ModelConfig not found
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse'
      summary: Get a specific ModelConfig
      tags:
      - ModelConfigs
    put:
      consumes:
      - application/json
      description: Updates an existing ModelConfig resource
      parameters:
      - description: Namespace of the ModelConfig
        in: path
        name: namespace
        required: true
        type: string
      - description: Name of the ModelConfig
        in: path
        name: configName
        required: true
        type: string
      - description: ModelConfig update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller_internal_httpserver_handlers.UpdateModelConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated ModelConfig
          schema:
            $ref: '#/definitions/controller_internal_httpserver_handlers.ModelConfigResponse'
        "400":
          description: Bad request - invalid input
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse'
        "404":
          description: ModelConfig not found
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_kagent-dev_kagent_go_controller_internal_httpserver_errors.ErrorResponse'
      summary: Update an existing ModelConfig
      tags:
      - ModelConfigs
  /health:
    get:
      description: Returns 200 OK if the service is alive
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health Check
      tags:
      - System
swagger: "2.0"
