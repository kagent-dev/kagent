{
  "provider": "autogen_agentchat.teams.RoundRobinGroupChat",
  "component_type": "team",
  "version": 1,
  "component_version": 1,
  "description": "ResourceCreator Agent",
  "label": "ResourceCreator Agent",
  "config": {
    "participants": [
      {
        "provider": "kagent.agents.TaskAgent",
        "component_type": "agent",
        "version": 1,
        "component_version": 1,
        "description": "An agent which runs a team of agents",
        "label": "society_of_mind_agent",
        "config": {
          "name": "society_of_mind_agent",
          "team": {
            "provider": "autogen_agentchat.teams.RoundRobinGroupChat",
            "component_type": "team",
            "version": 1,
            "component_version": 1,
            "description": "ResourceCreator Agent",
            "label": "RoundRobinGroupChat",
            "config": {
              "participants": [
                {
                  "provider": "autogen_agentchat.agents.AssistantAgent",
                  "component_type": "agent",
                  "version": 1,
                  "component_version": 1,
                  "description": "This is an example agent that knows how to create and apply Istio, Argo and Gateway API resources.",
                  "label": "Sample Resource Creator Agent",
                  "config": {
                    "name": "resourcecreator",
                    "model_client": {
                      "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
                      "component_type": "model",
                      "version": 1,
                      "component_version": 1,
                      "description": "Chat completion client for OpenAI hosted models.",
                      "label": "OpenAIChatCompletionClient",
                      "config": { "model": "gpt-4o", "stream_options": { "include_usage": true } }
                    },
                    "tools": [
                      {
                        "provider": "kagent.tools.k8s.ApplyManifest",
                        "description": "Apply a YAML resource file to the Kubernetes cluster.",
                        "component_type": "tool",
                        "component_version": 1,
                        "version": 1,
                        "label": "ApplyManifest",
                        "config": {}
                      },
                      {
                        "provider": "kagent.tools.k8s.GenerateResourceTool",
                        "description": "GenerateResourceTool knows how to generate a resource YAML configuration for Istio, Gateway API, Argo resources from a detailed description.",
                        "component_type": "tool",
                        "component_version": 1,
                        "version": 1,
                        "label": "GenerateResourceTool",
                        "config": { "model": "gpt-4o", "openai_api_key": "", "temperature": 0 }
                      },
                      {
                        "provider": "kagent.tools.k8s.GetResources",
                        "description": "Get information about resources in Kubernetes. Always prefer output type `wide` unless otherwise specified. 'all' is NOT an option, you must specify a resource type.",
                        "component_type": "tool",
                        "component_version": 1,
                        "version": 1,
                        "label": "GetResources",
                        "config": {}
                      },
                      {
                        "provider": "kagent.tools.k8s.GetAvailableAPIResources",
                        "description": "Gets the supported API resources in Kubernetes.",
                        "component_type": "tool",
                        "component_version": 1,
                        "version": 1,
                        "label": "GetAvailableAPIResources",
                        "config": {}
                      }
                    ],
                    "handoffs": [],
                    "model_context": {
                      "provider": "autogen_core.model_context.UnboundedChatCompletionContext",
                      "component_type": "chat_completion_context",
                      "version": 1,
                      "component_version": 1,
                      "description": "An unbounded chat completion context that keeps a view of the all the messages.",
                      "label": "UnboundedChatCompletionContext",
                      "config": {}
                    },
                    "description": "This is an example agent that knows how to create and apply Istio, Argo and Gateway API resources.",
                    "system_message": "You're a friendly and helpful agent that uses tools to help users with observability questions. You have access to the following tools:\n\n- GenerateResourceTool for creating YAML configuration for Istio, Argo and Gateway API resources\n- GetResource, GetAvailableAPIResources and ApplyManifest tools for retrieving existing resource from Kubernetes, checking which CRDs are available in Kubernees and applying/creating new resources\n\n# Instructions\n- If user question is unclear, ask for clarification before running any tools\n- Always be helpful and friendly\n- If you don't know how to answer the question DO NOT make things up, tell the user \"Sorry, I don't know how to answer that\" and ask them to clarify the question further\n- Before applying any resources, make sure you have all information you need\n- Double check the resource type exists in the cluster before creating it\n\n# Response format\n- ALWAYS format your response as Markdown\n- Your response will include a summary of actions you took and an explanation of the result\n- If you created any artifacts such as files or resources, you will include those in your response as well  ",
                    "reflect_on_tool_use": false,
                    "tool_call_summary_format": "{result}",
                    "model_client_stream": true
                  }
                }
              ],
              "termination_condition": {
                "provider": "kagent.terminations.TextMessageTermination",
                "component_type": "termination",
                "version": 1,
                "component_version": 1,
                "description": "Terminate the conversation if a specific text is mentioned.",
                "label": "TextMessageTermination",
                "config": { "source": "resourcecreator" }
              },
              "model_client": {
                "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
                "component_type": "model",
                "version": 1,
                "component_version": 1,
                "description": "Chat completion client for OpenAI hosted models.",
                "label": "OpenAIChatCompletionClient",
                "config": { "model": "gpt-4o", "stream_options": { "include_usage": true } }
              }
            }
          },
          "model_client": {
            "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
            "component_type": "model",
            "version": 1,
            "component_version": 1,
            "description": "Chat completion client for OpenAI hosted models.",
            "label": "OpenAIChatCompletionClient",
            "config": { "model": "gpt-4o", "stream_options": { "include_usage": true } }
          },
          "model_context": {
            "provider": "autogen_core.model_context.UnboundedChatCompletionContext",
            "component_type": "chat_completion_context",
            "version": 1,
            "component_version": 1,
            "description": "An unbounded chat completion context that keeps a view of the all the messages.",
            "label": "UnboundedChatCompletionContext",
            "config": {}
          },
          "model_client_stream": true
        }
      },
      {
        "provider": "autogen_agentchat.agents.UserProxyAgent",
        "component_type": "agent",
        "version": 1,
        "component_version": 1,
        "description": "An agent that represents a user.",
        "label": "kagent_user",
        "config": { "name": "kagent_user", "description": "Human user" }
      }
    ],
    "termination_condition": {
      "provider": "autogen_agentchat.conditions.TextMentionTermination",
      "component_type": "termination",
      "version": 1,
      "component_version": 1,
      "description": "Terminate the conversation if a specific text is mentioned.",
      "label": "TextMentionTermination",
      "config": { "text": "TERMINATE" }
    },
    "model_client": {
      "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
      "component_type": "model",
      "version": 1,
      "component_version": 1,
      "description": "Chat completion client for OpenAI hosted models.",
      "label": "OpenAIChatCompletionClient",
      "config": { "model": "gpt-4o", "stream_options": { "include_usage": true } }
    }
  }
}
