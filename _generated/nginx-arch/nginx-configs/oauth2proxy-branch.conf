# OAuth2-Proxy Branch Nginx Configuration
# Source: Kubernetes ConfigMap (kagent-nginx-config)
# Type: Dynamic configuration with Helm templating

events {
    worker_connections 1024;
}

http {
    # Enhanced logging for authentication debugging
    access_log /dev/stdout;
    error_log /dev/stderr;

    log_format main '$time_local $remote_addr - $remote_user - $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for';
    log_format upstreamlog '$time_local $remote_addr - $remote_user - $server_name $host to: $upstream_addr: $request $status upstream_response_time $upstream_response_time msec $msec request_time $request_time';

    # Standard upstream definitions
    upstream kagent_ui {
        server 127.0.0.1:8001;
    }
    upstream kagent_ws_backend {
        server 127.0.0.1:8081;
    }
    upstream kagent_backend {
        server 127.0.0.1:8083;
    }

    # OAuth2-Proxy upstream (when enabled)
    upstream oauth2_proxy {
        server 127.0.0.1:4180;
    }

    # WebSocket upgrade mapping
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 8080;
        server_name localhost;

        # OAuth2-Proxy endpoints
        location /oauth2/ {
            proxy_pass http://oauth2_proxy;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
        }

        # Internal authentication endpoint
        location = /oauth2/auth {
            internal;
            proxy_pass http://oauth2_proxy;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Uri $request_uri;
            proxy_set_header Content-Length "";
            proxy_pass_request_body off;
        }

        # Protected frontend routes
        location / {
            auth_request /oauth2/auth;
            
            # Extract user information from auth response
            auth_request_set $user $upstream_http_x_auth_request_user;
            auth_request_set $email $upstream_http_x_auth_request_email;
            auth_request_set $preferred_username $upstream_http_x_auth_request_preferred_username;
            
            proxy_pass http://kagent_ui;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Origin $scheme://$host;
            proxy_set_header X-Auth-Request-User $user;
            proxy_set_header X-Auth-Request-Email $email;
            proxy_set_header X-Auth-Request-Preferred-Username $preferred_username;
            proxy_cache_bypass $http_upgrade;
            
            # Redirect to oauth2-proxy on auth failure
            error_page 401 = @error401;
        }

        # Protected backend routes
        location /api/ {
            auth_request /oauth2/auth;
            
            # Extract user information
            auth_request_set $user $upstream_http_x_auth_request_user;
            auth_request_set $email $upstream_http_x_auth_request_email;
            auth_request_set $preferred_username $upstream_http_x_auth_request_preferred_username;
            
            proxy_pass http://kagent_backend/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Auth-Request-User $user;
            proxy_set_header X-Auth-Request-Email $email;
            proxy_set_header X-Auth-Request-Preferred-Username $preferred_username;
            proxy_cache_bypass $http_upgrade;
            
            # Redirect to oauth2-proxy on auth failure
            error_page 401 = @error401;
        }

        # Protected WebSocket routes
        location /api/ws/ {
            auth_request /oauth2/auth;
            
            # Extract user information
            auth_request_set $user $upstream_http_x_auth_request_user;
            auth_request_set $email $upstream_http_x_auth_request_email;
            auth_request_set $preferred_username $upstream_http_x_auth_request_preferred_username;
            
            proxy_pass http://kagent_ws_backend/api/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Auth-Request-User $user;
            proxy_set_header X-Auth-Request-Email $email;
            proxy_set_header X-Auth-Request-Preferred-Username $preferred_username;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_buffering off;
            
            # Redirect to oauth2-proxy on auth failure
            error_page 401 = @error401;
        }

        # Error handling for authentication failures
        location @error401 {
            return 302 /oauth2/start?rd=$scheme://$host$request_uri;
        }
    }
} 
